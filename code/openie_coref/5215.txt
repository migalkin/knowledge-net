0.9296819926539052		SimpleArgument(a programming language designed by Carl Hewitt at MIT,List([61, 114)))	Relation(published,List([127, 136)))	TemporalArgument(first,List([121, 126)))	"Planner (often seen in publications as ""PLANNER"" although it is not an acronym) is a programming language designed by Carl Hewitt at MIT, and first published in 1969."
0.8809749778776944		SimpleArgument(a programming language designed by Carl Hewitt at MIT,List([61, 114)))	Relation(published in,List([127, 136), [137, 139)))	TemporalArgument(1969,List([140, 144)))	"Planner (often seen in publications as ""PLANNER"" although it is not an acronym) is a programming language designed by Carl Hewitt at MIT, and first published in 1969."
0.9250606141558615		SimpleArgument(a programming language,List([61, 83)))	Relation(designed by,List([84, 92), [93, 95)))	SimpleArgument(Carl Hewitt,List([96, 107)))	"Planner (often seen in publications as ""PLANNER"" although it is not an acronym) is a programming language designed by Carl Hewitt at MIT, and first published in 1969."
0.8409215403297325		SimpleArgument(Planner,List([0, 7)))	"Relation(seen as "" PLANNER,List([16, 20), [37, 49)))"	TemporalArgument(often,List([10, 15)))	"Planner (often seen in publications as ""PLANNER"" although it is not an acronym) is a programming language designed by Carl Hewitt at MIT, and first published in 1969."
0.8635293727776819		SimpleArgument(Planner,List([0, 7)))	Relation(seen as,List([16, 20), [37, 39)))	"SimpleArgument("" PLANNER,List([40, 49)))"	"Planner (often seen in publications as ""PLANNER"" although it is not an acronym) is a programming language designed by Carl Hewitt at MIT, and first published in 1969."
0.9259159388118494		SimpleArgument(Planner,List([0, 7)))	"Relation(seen as "" PLANNER in,List([16, 20), [21, 41), [42, 49)))"	SpatialArgument(publications,List([24, 36)))	"Planner (often seen in publications as ""PLANNER"" although it is not an acronym) is a programming language designed by Carl Hewitt at MIT, and first published in 1969."
0.4978219019954182		SimpleArgument(it,List([61, 63)))	Relation(designed by,List([64, 72), [73, 75)))	SimpleArgument(Carl Hewitt,List([76, 87)))	"Planner (often seen in publications as ""PLANNER"" although it is not an acronym) is a programming language designed by Carl Hewitt at MIT, and first published in 1969."
0.8592111619294878		SimpleArgument(Planner,List([0, 7)))	Relation(seen,List([16, 20)))	TemporalArgument(often,List([10, 15)))	"Planner (often seen in publications as ""PLANNER"" although it is not an acronym) is a programming language designed by Carl Hewitt at MIT, and first published in 1969."
0.9210233335200773		SimpleArgument(Planner,List([0, 7)))	Relation(seen in,List([16, 20), [21, 23)))	"SpatialArgument(publications as "" PLANNER,List([24, 49)))"	"Planner (often seen in publications as ""PLANNER"" although it is not an acronym) is a programming language designed by Carl Hewitt at MIT, and first published in 1969."
0.8893936196314105		SimpleArgument(subsets such as Pico-Planner,List([8, 36)))	Relation(were implemented,List([37, 53)))	TemporalArgument(First,List([0, 5)))	First, subsets such as Micro-Planner and Pico-Planner were implemented, and then essentially the whole language was implemented as Popler by Julian Davies at the University of Edinburgh in the POP-2 programming language.
0.8893936196314105		SimpleArgument(subsets such as Micro-Planner,List([8, 37)))	Relation(were implemented,List([38, 54)))	TemporalArgument(First,List([0, 5)))	First, subsets such as Micro-Planner and Pico-Planner were implemented, and then essentially the whole language was implemented as Popler by Julian Davies at the University of Edinburgh in the POP-2 programming language.
0.9919999837875366		SimpleArgument(2 programming language,List([0, 0)))	Relation(was implemented at,List([0, 0)))	SimpleArgument(the University of Edinburgh in the POP -,List(null))	First, subsets such as Micro-Planner and Pico-Planner were implemented, and then essentially the whole language was implemented as Popler by Julian Davies at the University of Edinburgh in the POP-2 programming language.
0.8433622012584514		SimpleArgument(the whole language,List([17, 35)))	Relation(was implemented,List([36, 51)))	TemporalArgument(essentially,List([5, 16)))	First, subsets such as Micro-Planner and Pico-Planner were implemented, and then essentially the whole language was implemented as Popler by Julian Davies at the University of Edinburgh in the POP-2 programming language.
0.8433622012584514		SimpleArgument(the whole language,List([17, 35)))	Relation(was implemented,List([36, 51)))	TemporalArgument(then,List([0, 4)))	First, subsets such as Micro-Planner and Pico-Planner were implemented, and then essentially the whole language was implemented as Popler by Julian Davies at the University of Edinburgh in the POP-2 programming language.
0.9281860276351157		SimpleArgument(the whole language,List([17, 35)))	Relation(was implemented at,List([36, 51), [79, 81)))	SpatialArgument(the University of Edinburgh in the POP - 2 programming language,List([82, 145)))	First, subsets such as Micro-Planner and Pico-Planner were implemented, and then essentially the whole language was implemented as Popler by Julian Davies at the University of Edinburgh in the POP-2 programming language.
0.8896176678897285		SimpleArgument(the whole language,List([17, 35)))	Relation(was implemented by,List([36, 51), [62, 64)))	SimpleArgument(Julian Davies,List([65, 78)))	First, subsets such as Micro-Planner and Pico-Planner were implemented, and then essentially the whole language was implemented as Popler by Julian Davies at the University of Edinburgh in the POP-2 programming language.
0.9250606141558615		SimpleArgument(the whole language,List([17, 35)))	Relation(was implemented as,List([36, 51), [52, 54)))	SimpleArgument(Popler,List([55, 61)))	First, subsets such as Micro-Planner and Pico-Planner were implemented, and then essentially the whole language was implemented as Popler by Julian Davies at the University of Edinburgh in the POP-2 programming language.
0.9619255660711478		SimpleArgument(Derivations such as Ether ( see Scientific Community Metaphor,List([0, 61)))	Relation(were,List([64, 68)))	SimpleArgument(important tools in Artificial Intelligence research,List([69, 120)))	Derivations such as QA4, Conniver, QLISP and Ether (see Scientific Community Metaphor) were important tools in Artificial Intelligence research in the 1970s, which influenced commercial developments such as KEE and ART.
0.9383300087646045		SimpleArgument(Derivations such as QLISP,List([0, 25)))	Relation(were,List([26, 30)))	SimpleArgument(important tools in Artificial Intelligence research in the 1970 s,List([31, 96)))	Derivations such as QA4, Conniver, QLISP and Ether (see Scientific Community Metaphor) were important tools in Artificial Intelligence research in the 1970s, which influenced commercial developments such as KEE and ART.
0.9672828900016419		SimpleArgument(Derivations such as Conniver,List([0, 28)))	Relation(were,List([29, 33)))	SimpleArgument(important tools in Artificial Intelligence research in the 1970 s,List([34, 99)))	Derivations such as QA4, Conniver, QLISP and Ether (see Scientific Community Metaphor) were important tools in Artificial Intelligence research in the 1970s, which influenced commercial developments such as KEE and ART.
0.9125462839307745		SimpleArgument(the 1970 s,List([84, 94)))	Relation(influenced,List([103, 113)))	SimpleArgument(commercial developments such as ART,List([114, 149)))	Derivations such as QA4, Conniver, QLISP and Ether (see Scientific Community Metaphor) were important tools in Artificial Intelligence research in the 1970s, which influenced commercial developments such as KEE and ART.
0.9125462839307745		SimpleArgument(the 1970 s,List([84, 94)))	Relation(influenced,List([103, 113)))	SimpleArgument(commercial developments such as KEE,List([114, 149)))	Derivations such as QA4, Conniver, QLISP and Ether (see Scientific Community Metaphor) were important tools in Artificial Intelligence research in the 1970s, which influenced commercial developments such as KEE and ART.
0.9672828900016419		SimpleArgument(Derivations such as QA4,List([0, 23)))	Relation(were,List([24, 28)))	SimpleArgument(important tools in Artificial Intelligence research in the 1970 s,List([29, 94)))	Derivations such as QA4, Conniver, QLISP and Ether (see Scientific Community Metaphor) were important tools in Artificial Intelligence research in the 1970s, which influenced commercial developments such as KEE and ART.
