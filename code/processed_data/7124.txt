0.9030401971054747		SimpleArgument(a solution,List([109, 119)))	Relation(containing,List([120, 130)))	SimpleArgument(the non-pathogenic bacteria,List([131, 158)))	Dosier's brick-making method consists of filling a rectangular form with sand layered intermittently with a solution containing urea, calcium chloride, and the non-pathogenic bacteria Sporosarcina pasteurii.
0.9030401971054747		SimpleArgument(a solution,List([109, 119)))	Relation(containing,List([120, 130)))	SimpleArgument(calcium chloride,List([131, 147)))	Dosier's brick-making method consists of filling a rectangular form with sand layered intermittently with a solution containing urea, calcium chloride, and the non-pathogenic bacteria Sporosarcina pasteurii.
0.9030401971054747		SimpleArgument(a solution,List([109, 119)))	Relation(containing,List([120, 130)))	SimpleArgument(urea,List([131, 135)))	Dosier's brick-making method consists of filling a rectangular form with sand layered intermittently with a solution containing urea, calcium chloride, and the non-pathogenic bacteria Sporosarcina pasteurii.
0.561136747682725		SimpleArgument(sand,List([76, 80)))	Relation(layered,List([81, 88)))		Dosier's brick-making method consists of filling a rectangular form with sand layered intermittently with a solution containing urea, calcium chloride, and the non-pathogenic bacteria Sporosarcina pasteurii.
0.9489461080096143		SimpleArgument(Dosier 's brick - making method,List([0, 31)))	Relation(consists of,List([32, 40), [41, 43)))	SimpleArgument(filling a rectangular form with sand,List([44, 80)))	Dosier's brick-making method consists of filling a rectangular form with sand layered intermittently with a solution containing urea, calcium chloride, and the non-pathogenic bacteria Sporosarcina pasteurii.
0.8872966301155124		SimpleArgument(a mineral,List([76, 85)))	Relation(binds the sand,List([91, 96), [97, 105)))	SimpleArgument(together into a brick,List([106, 127)))	After several days, the bacteria create a chemical chain reaction producing a mineral that binds the sand together into a brick.
0.9126241552108846		SimpleArgument(a mineral,List([76, 85)))	Relation(binds,List([91, 96)))	SimpleArgument(the sand,List([97, 105)))	After several days, the bacteria create a chemical chain reaction producing a mineral that binds the sand together into a brick.
0.8687508222468601		SimpleArgument(a chemical chain reaction,List([40, 65)))	Relation(producing,List([66, 75)))	SimpleArgument(a mineral that binds the sand together into a brick,List([76, 127)))	After several days, the bacteria create a chemical chain reaction producing a mineral that binds the sand together into a brick.
0.9318322056713951		SimpleArgument(the bacteria,List([20, 32)))	Relation(create a chemical chain reaction producing a mineral After,List([0, 5), [33, 77), [78, 85)))	TemporalArgument(several days,List([6, 18)))	After several days, the bacteria create a chemical chain reaction producing a mineral that binds the sand together into a brick.
0.9030401971054747		SimpleArgument(the bacteria,List([20, 32)))	Relation(create,List([33, 39)))	SimpleArgument(a chemical chain reaction producing a mineral,List([40, 85)))	After several days, the bacteria create a chemical chain reaction producing a mineral that binds the sand together into a brick.
0.5308182055023938	Context(Dosier estimates,List([98, 114)))	SimpleArgument(her method,List([120, 130)))	Relation(could reduce carbon emissions,List([131, 143), [144, 160)))	TemporalArgument(each year,List([181, 190)))	Because this process does not involve firing the brick in a kiln as in conventional brick-making, Dosier estimates that her method could reduce carbon emissions by 800 million tons each year.
0.575803381446508	Context(Dosier estimates,List([98, 114)))	SimpleArgument(her method,List([120, 130)))	Relation(could reduce carbon emissions by,List([131, 143), [144, 160), [161, 163)))	SimpleArgument(800 million tons,List([164, 180)))	Because this process does not involve firing the brick in a kiln as in conventional brick-making, Dosier estimates that her method could reduce carbon emissions by 800 million tons each year.
0.575803381446508	Context(Dosier estimates,List([98, 114)))	SimpleArgument(her method,List([120, 130)))	Relation(could reduce,List([131, 143)))	SimpleArgument(carbon emissions,List([144, 160)))	Because this process does not involve firing the brick in a kiln as in conventional brick-making, Dosier estimates that her method could reduce carbon emissions by 800 million tons each year.
0.8848358350418233		SimpleArgument(Dosier,List([98, 104)))	Relation(estimates that,List([105, 114), [115, 119)))	SimpleArgument(her method could reduce carbon emissions by 800 million tons each year,List([120, 190)))	Because this process does not involve firing the brick in a kiln as in conventional brick-making, Dosier estimates that her method could reduce carbon emissions by 800 million tons each year.
0.9372494423173455		SimpleArgument(this process,List([8, 20)))	Relation(does not involve,List([21, 37)))	SimpleArgument(firing the brick in a kiln as in conventional brick-making,List([38, 96)))	Because this process does not involve firing the brick in a kiln as in conventional brick-making, Dosier estimates that her method could reduce carbon emissions by 800 million tons each year.
0.8847999636040884		SimpleArgument(Dosier,List([0, 6)))	Relation(is the winner of,List([7, 23)))	SimpleArgument(the 2010 Metropolis Next Generation Design Competition,List([24, 78)))	Dosier is the winner of the 2010 Metropolis Next Generation Design Competition.
0.9383119524695255		SimpleArgument(Dosier,List([0, 6)))	Relation(is,List([7, 9)))	SimpleArgument(the winner of the 2010 Metropolis,List([10, 43)))	Dosier is the winner of the 2010 Metropolis Next Generation Design Competition.
0.8847999636040884		SimpleArgument(She,List([0, 3)))	Relation(is the CEO of,List([4, 17)))	SimpleArgument(bioMASON,List([18, 26)))	She is the CEO of bioMASON, a biotechnology start-up grown from her Better Brick project.
0.3853208301752743		SimpleArgument(Brick project,List([75, 88)))	Relation([is] Better [of],List([68, 74)))	SimpleArgument(hers,List([64, 67)))	She is the CEO of bioMASON, a biotechnology start-up grown from her Better Brick project.
0.8904585087270267		SimpleArgument(a biotechnology start-up,List([28, 52)))	Relation(grown from,List([53, 58), [59, 63)))	SimpleArgument(her Better Brick project,List([64, 88)))	She is the CEO of bioMASON, a biotechnology start-up grown from her Better Brick project.
0.5680679595514976		SimpleArgument(She,List([0, 3)))	Relation(is,List([4, 6)))	SimpleArgument(the CEO of bioMASON,List([7, 26)))	She is the CEO of bioMASON, a biotechnology start-up grown from her Better Brick project.
0.8847999636040884		SimpleArgument(The company,List([0, 11)))	Relation(was the winner of,List([12, 29)))	SimpleArgument(the 2013 Dutch Postcode Lottery Green Challenge,List([30, 77)))	The company was the winner of the 2013 Dutch Postcode Lottery Green Challenge, one of the world's largest and longest-running start-up competitions focused on sustainable businesses.
0.9432816123537144		SimpleArgument(the world 's largest start - up competitions,List([87, 131)))	Relation(focused on,List([132, 139), [140, 142)))	SimpleArgument(sustainable businesses,List([143, 165)))	The company was the winner of the 2013 Dutch Postcode Lottery Green Challenge, one of the world's largest and longest-running start-up competitions focused on sustainable businesses.
0.9597492605074653		SimpleArgument(The company,List([0, 11)))	Relation(was,List([12, 15)))	SimpleArgument(the winner of the 2013 Dutch Postcode Lottery Green Challenge,List([16, 77)))	The company was the winner of the 2013 Dutch Postcode Lottery Green Challenge, one of the world's largest and longest-running start-up competitions focused on sustainable businesses.
